import Head from "next/head";
import Link from "next/link";
import React, { useEffect, useState } from "react";
import name_transparent_2 from "../../public/images/name_transparent_2.png";
import {
  getAuth,
  createUserWithEmailAndPassword,
  onAuthStateChanged,
} from "firebase/auth";
import {
  addDoc,
  collection,
  doc,
  getDoc,
  serverTimestamp,
  setDoc,
  updateDoc,
} from "firebase/firestore";

import { useRouter } from "next/router";
import { useRecoilState } from "recoil";
import { userState } from "../../atoms/userAtom";
import { db } from "../../firebase";

function Register() {
  const [fname, setFname] = useState("");
  const [lname, setLname] = useState("");
  const [year, setYear] = useState("");
  const [admissionYear, setAdmissionYear] = useState("");
  const [email, setEmail] = useState("");
  const [branch, setBranch] = useState("");
  const [password, setPassword] = useState("");
  const [cpassword, setCpassword] = useState("");
  const router = useRouter();
  const [currentUser, setCurrentUser] = useRecoilState(userState);

  useEffect(() => {
    if (!fname || !lname || !admissionYear || !branch) {
      setEmail("");
    } else {
      setEmail(
        fname + "." + lname + admissionYear + "@" + branch + ".sce.edu.in"
      );
    }
  });

  const auth = getAuth();
  const handleRegister = async () => {
    try {
      createUserWithEmailAndPassword(auth, email, password).then(
        (userCredential) => {
          const user = userCredential.user;

          const Reg = async () => {
            const docRef = doc(db, "users", user.uid);
            const docSnap = await getDoc(docRef);
            if (!docSnap.exists()) {
              await setDoc(docRef, {
                fname: user.fname,
                lname: user.lname,
                name: user.displayName,
                email: user.email,
                username: user.displayName,
                //   userImg: user.photoURL,
                uid: user.uid,
                timestamp: serverTimestamp(),
              });
              setDoc(doc(db, "userChats", user.uid), {});
            } else {
              updateDoc(docRef, {
                lastLogin: serverTimestamp(),
              });
            }
            router.push("/auth/signin");
          };
        }
      );
    } catch (error) {
      console.log(error);
    }
    setFname("");
    setLname("");
    setYear("");
    setAdmissionYear("");
    setEmail("");
    setBranch("");
    setPassword("");
    setCpassword("");
  };

  return (
    <div>
      <Head>
        <title>Register | AskSCoE</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex h-screen items-center justify-center py-12 px-4 sm:px-6 lg:px-8  bg-[url('../public/images/bgr.jpg')]">
        <div className="w-full max-w-xl space-y-8 bg-white rounded-xl p-5">
          <div>
            <img
              className="mx-auto h-30 w-auto"
              src={name_transparent_2.src}
              alt="Logo"
            />
            <h2 className="mt-2 text-lg text-center">
              A place to share knowledge and know your Institute well❤️
            </h2>
            <h2 className="mt-6 text-center text-3xl font-bold tracking-tight text-gray-900">
              Create a New Account
            </h2>
          </div>
          <form
            className="mt-8 space-y-6 max-w-md mx-auto"
            // action="#"
            // method="POST"
            // onSubmit={handleSubmit}
          >
            <input type="hidden" name="remember" defaultValue="true" />
            <div className="-space-y-px rounded-md shadow-sm">
              <div>
                <label htmlFor="fname" className="sr-only">
                  First Name
                </label>
                <input
                  id="fname"
                  name="fname"
                  type="text"
                  // required
                  className="relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                  placeholder="First Name"
                  value={fname}
                  onChange={(e) => setFname(e.target.value)}
                />
              </div>

              <div className="-space-y-px rounded-md shadow-sm">
                <div>
                  <label htmlFor="lname" className="sr-only">
                    Last Name
                  </label>
                  <input
                    id="lname"
                    name="lname"
                    type="text"
                    // required
                    className="relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                    placeholder="Last Name"
                    value={lname}
                    onChange={(e) => setLname(e.target.value)}
                  />
                </div>
              </div>

              <div>
                <label htmlFor="admissionYear" className="sr-only">
                  Year of Admission
                </label>
                <select
                  id="admissionYear"
                  name="admissionYear"
                  className="cursor-pointer relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900  focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                  value={admissionYear}
                  onChange={(e) => setAdmissionYear(e.target.value)}
                >
                  <option>Year of Admission</option>
                  <option value="19">19</option>
                  <option value="20">20</option>
                  <option value="21">21</option>
                  <option value="22">22</option>
                </select>
              </div>

              <div>
                <label htmlFor="branch" className="sr-only">
                  branch
                </label>
                <select
                  id="branch"
                  name="branch"
                  className="cursor-pointer relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900  focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                  value={branch}
                  onChange={(e) => setBranch(e.target.value)}
                >
                  <option>Branch</option>
                  <option value="it">it</option>
                  <option value="comp">comp</option>
                  <option value="ds">ds</option>
                  <option value="civil">civil</option>
                  <option value="mech">mech</option>
                  <option value="aiml">aiml</option>
                </select>
              </div>

              <div>
                <label htmlFor="year" className="sr-only">
                  Year
                </label>
                <select
                  id="year"
                  name="year"
                  className=" relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900  focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                  value={year}
                  onChange={(e) => setYear(e.target.value)}
                >
                  <option>Year</option>
                  <option>First Year</option>
                  <option>Second Year</option>
                  <option>Third Year</option>
                  <option>Fourth Year</option>
                </select>
              </div>

              <div>
                <label htmlFor="email-address" className="sr-only">
                  Email address
                </label>
                <input
                  id="email-address"
                  name="email"
                  type="email"
                  autoComplete="email"
                  value={email.toLowerCase()}
                  // required
                  className="relative block w-full appearance-none rounded-none rounded-t-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                  placeholder="Email address"
                />
              </div>

              <div>
                <label htmlFor="password" className="sr-only">
                  Password
                </label>
                <input
                  id="password"
                  name="password"
                  type="password"
                  autoComplete="current-password"
                  value={password}
                  onChange={(e) => setPassword(e.target.value)}
                  // required
                  className="relative block w-full appearance-none rounded-none rounded-b-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                  placeholder="Password"
                />
              </div>
              <div>
                <label htmlFor="confirm-password" className="sr-only">
                  Confirm Password
                </label>
                <input
                  id="confirm-password"
                  name="confirm-password"
                  type="password"
                  autoComplete="current-password"
                  value={cpassword}
                  onChange={(e) => setCpassword(e.target.value)}
                  // required
                  className="relative block w-full appearance-none rounded-none rounded-b-md border border-gray-300 px-3 py-2 text-gray-900 placeholder-gray-500 focus:z-10 focus:border-indigo-500 focus:outline-none focus:ring-indigo-500 sm:text-sm"
                  placeholder="Confirm Password"
                />
              </div>
            </div>

            <div>
              <button
                type="button"
                onClick={handleRegister}
                className="group relative flex w-full justify-center rounded-md border border-transparent bg-indigo-600 py-2 px-4 text-sm font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2"
              >
                Register
              </button>
            </div>

            <div className="flex justify-end text-sm font-medium text-indigo-600 hover:text-indigo-500 cursor-pointer">
              <Link href="/auth/signin">Already have an account?</Link>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}

export default Register;
